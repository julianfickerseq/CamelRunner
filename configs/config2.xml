<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans" 
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" 
	xmlns:jdbc="http://www.springframework.org/schema/jdbc" 
	xmlns:ns2="null" 
	xmlns:ns3="null" 
	xmlns:jolokia="http://www.jolokia.org/jolokia-spring/schema/config"
	xsi:schemaLocation="        
	http://www.springframework.org/schema/beans 
	http://www.springframework.org/schema/beans/spring-beans.xsd       
	http://camel.apache.org/schema/spring http://camel.apache.org/schema/spring/camel-spring.xsd     
	http://www.springframework.org/schema/jdbc http://www.springframework.org/schema/jdbc/spring-jdbc.xsd 			
	http://www.jolokia.org/jolokia-spring/schema/config 
	http://www.jolokia.org/jolokia-spring/schema/config/jolokia-config.xsd">
	<!-- the camel context -->
	
	<camelContext xmlns="http://camel.apache.org/schema/spring" id="camel" autoStartup="true">
		<jmxAgent id="agent" createConnector="true" registryPort="1399"/>
		<dataFormats>
			<json id="jack" library="Jackson"/>
		</dataFormats>

		<!--================= Read XLS ==================-->
		<route id="readxlsanddelete">			
			<from uri="file:/Users/snuids/Desktop/ImportAndDeleteXLS?delete=true"/>
			<log message="Importing (Delete) XLS"/>      			
			<unmarshal>
			    <custom ref="excel" />
			</unmarshal>
			<setHeader headerName="CreateIndex">
				<simple>true</simple>
			</setHeader>
			<setHeader headerName="IndexType">
				<simple>fromxls</simple>
			</setHeader>
			<setHeader headerName="IndexName">
				<javaScript>
					var filename=''+request.headers.get('CamelFileNameOnly');
					var cols=filename.toLowerCase().replace(' ','').split('\.');
					filename=cols[0];
					filename;
				</javaScript>
			</setHeader>
			<to uri="direct:processdata"/>					
		</route>
		
		<!--================= Read XLS ==================-->
		<route id="readxlsandupdate">			
			<from uri="file:/Users/snuids/Desktop/ImportXLS?delete=true"/>
			<log message="Importing XLS"/>      			
			<unmarshal>
			    <custom ref="excel" />
			</unmarshal>
			<setHeader headerName="CreateIndex">
				<simple>false</simple>
			</setHeader>
			<setHeader headerName="IndexType">
				<simple>fromxls</simple>
			</setHeader>
			<setHeader headerName="IndexName">
				<javaScript>
					var filename=''+request.headers.get('CamelFileNameOnly');
					var cols=filename.toLowerCase().replace(' ','').split('\.');
					filename=cols[0];
					filename;
				</javaScript>
			</setHeader>
			<to uri="direct:processdata"/>					
		</route>
		
		<!--================= Process Data ===================-->
		<route id="processdata">
			<from uri="direct:processdata"/>
			<filter>
				<simple>${headers.CreateIndex}</simple>
				<setBody>
					<constant></constant>
				</setBody>
				<setHeader headerName="CamelHttpMethod">
				        <constant>DELETE</constant>
				</setHeader>						
				<recipientList>
					<simple>http4://localhost:9200/${headers.IndexName}/</simple>
				</recipientList>
				<log message="Index ${headers.IndexName} Deleted"/>      
				<setBody>
					<simple>${headers.mappings}</simple>
				</setBody>			
				<marshal ref="jack"/>	
				<convertBodyTo type="java.lang.String"/>
				<setBody>
					<javaScript>
						var res=''+request.body;
						var maps=JSON.parse(res);
						var fres={"settings" : {"number_of_shards" : 5}};
						fres.mappings={};
						fres.mappings[headers.get('IndexType')]={"properties":maps}
						var fresstr=JSON.stringify(fres);
						fresstr;
					</javaScript>
				</setBody>
				<log message="Mappings ${body} "/>      
				<setHeader headerName="CamelHttpMethod">
				    <constant>POST</constant>
				</setHeader>						
				<recipientList>
					<simple>http4://localhost:9200/${headers.IndexName}/</simple>
				</recipientList>
				<log message="Index ${headers.IndexName} Created"/>      
			</filter>
			<to uri="direct:processdata2"/>
		</route>
		
		<!--================= Process Data 2 ===================-->
		<route id="processdata2">
			<from uri="direct:processdata2"/>
			<setBody>
				<simple>${headers.xlsdata}</simple>
			</setBody>
			<split>
				<simple>${body}</simple>
				<marshal ref="jack"/>	
				<convertBodyTo type="java.lang.String"/>
				<setBody>
					<javaScript>
						var res=''+request.body;
						var data=JSON.parse(res);
						var fresstr=JSON.stringify(data);
						fresstr;
					</javaScript>
				</setBody>
				<log message="Data ${body} "/>  
				<setHeader headerName="CamelHttpMethod">
				    <constant>POST</constant>
				</setHeader>						
				<recipientList>
					<simple>http4://localhost:9200/${headers.IndexName}/${headers.IndexType}</simple>
				</recipientList>
				<log message="Data added to index ${headers.IndexName}/${headers.IndexType}"/>          				
			</split>

		</route>
			
	</camelContext>
	
	<bean id="jms" class="org.apache.activemq.camel.component.ActiveMQComponent">
		<property name="brokerURL" value="tcp://127.0.0.1:61616"/>
	</bean>
	
	<bean id="excel" class="helpers.Excel.ExcelDataFormat">
		<property name="importType" value="FORMATTED"/>
	</bean>
	
	<jolokia:agent lookupConfig="false" systemPropertiesMode="never">
	    <jolokia:config
	            autoStart="true"
	            host="0.0.0.0"
	            port="8778"
	            />
	</jolokia:agent>
</beans>
